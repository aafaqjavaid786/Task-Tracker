{"ast":null,"code":"var _jsxFileName = \"C:\\\\task-tracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n// import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from './components/Footer';\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  const [showAddTask, setShowAddTask] = useState(false);\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n\n    // const newTask = {id,...task}\n\n    // setTasks([...tasks, newTask])\n  };\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const toggleReminder = async id => {\n    const taskToBeUpdated = await fetchTask(id);\n    const updatedTask = {\n      ...taskToBeUpdated,\n      reminder: !taskToBeUpdated.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: data.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n            onAdd: addTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 27\n          }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            onDelete: deleteTask,\n            onToggle: toggleReminder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 32\n          }, this) : \"No Tasks to show\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this)\n  // <div className=\"App\">\n  //   <header className=\"App-header\">\n  //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //     <p>\n  //       Edit <code>src/App.js</code> and save to reload.\n  //     </p>\n  //     <a\n  //       className=\"App-link\"\n  //       href=\"https://reactjs.org\"\n  //       target=\"_blank\"\n  //       rel=\"noopener noreferrer\"\n  //     >\n  //       Learn React\n  //     </a>\n  //   </header>\n  // </div>\n  ;\n}\n_s(App, \"HGFQI68xt+hORQb7cIuIEsr+7qI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","useState","useEffect","Header","Footer","Tasks","AddTask","About","App","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","showAddTask","setShowAddTask","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToBeUpdated","updatedTask","reminder","map","props","length"],"sources":["C:/task-tracker/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\nimport React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { useState, useEffect } from \"react\"\nimport Header from \"./components/Header\"\nimport Footer from './components/Footer'\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\nimport About from './components/About'\n\n\nfunction App() {\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async() =>{\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  },[])\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\nconst [showAddTask, setShowAddTask] = useState(false)\n\nconst addTask = async (task) => {\n\n  const res = await fetch(\"http://localhost:5000/tasks\", {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(task),\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n  // const id = Math.floor(Math.random() * 10000) + 1\n\n  // const newTask = {id,...task}\n\n  // setTasks([...tasks, newTask])\n}\n\nconst deleteTask = async (id) => {\n\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE',\n  })\n\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\nconst toggleReminder = async (id) => {\n  const taskToBeUpdated = await fetchTask(id)\n\n  const updatedTask = {...taskToBeUpdated, reminder:!taskToBeUpdated.reminder}\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method:\"PUT\",\n    headers:{\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(updatedTask)\n  })\n\n  const data = await res.json()\n\n  setTasks(tasks.map((task) => task.id === id ? ({...task, reminder:data.reminder}) : task))\n}\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      <Route path='/' exact render={(props) => (\n        <>\n          {showAddTask && <AddTask onAdd={addTask}/>}\n          {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) : (\"No Tasks to show\")}        \n        </>\n      )}/>\n      <Route path='/about' component={About}/>\n      <Footer />\n\n    </div>\n    </Router>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}